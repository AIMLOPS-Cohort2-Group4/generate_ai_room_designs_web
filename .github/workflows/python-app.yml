name: Python application

on:
  push:
    branches: [ "development" ]
  pull_request:
    branches: [ "development" ]

env:
  AWS_REGION: ap-south-1
  ECR_REPOSITORY: gen-ai-interior-design-ikea
  ECS_SERVICE: service-1
  ECS_CLUSTER: MLCluster
  ECS_TASK_DEFINITION: sample-fargate-1.json
  CONTAINER_NAME: generate_ai_room_designs

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Update kubeconfig
      run: |
        aws eks --region ap-south-1 update-kubeconfig --name AI_ML_Capstone

    - name: Update deployment.yaml with new image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        ls -l
        sed -i "s|image: .*|image: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG|g" ./gradio-deployment-k8/deployment.yaml

    - name: Apply Kubernetes configuration
      run: |
        kubectl replace --force -f ./gradio-deployment-k8/deployment.yaml -n gradio-fe

    - name: Get pods
      run: |
        kubectl get all -n gradio-fe
